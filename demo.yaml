apiVersion: v1
kind: ConfigMap
metadata:
  name: worker-script
data:
  start.py: |
    from datetime import datetime
    import random
    import os

    print(str(datetime.now()) + " Starting...")
    for i in range(random.randint(120,180)):
        os.system("sleep 1") 
        print("Running for %s secs" % (i+1))
    print(str(datetime.now()) + " Done")
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: normal-priority
value: 1
globalDefault: true
description: "This priority class should be used for all jobs."
preemptionPolicy: Never
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: high-priority
value: 100
globalDefault: false
description: "This priority class should be used for higher priority jobs."
preemptionPolicy: Never
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: trivial-job
spec:
  schedule: "*/1 * * * *"
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: pyworker
            image: python:3
            resources:
              limits:
                cpu: 1
            env:
              - name: PYTHONUNBUFFERED
                value: "1"
            command:
              - "python"
            args:
              - "/scripts/start.py"
            volumeMounts:
              - name: worker-script
                mountPath: /scripts
          volumes:
            - name: worker-script
              configMap:
                name: worker-script
          restartPolicy: Never
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: urgent-job
spec:
  schedule: "*/3 * * * *"
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: pyworker
            image: python:3
            resources:
              limits:
                cpu: 1
            env:
              - name: PYTHONUNBUFFERED
                value: "1"
            command:
              - "python"
            args:
              - "/scripts/start.py"
            volumeMounts:
              - name: worker-script
                mountPath: /scripts
          volumes:
            - name: worker-script
              configMap:
                name: worker-script
          restartPolicy: Never
          priorityClassName: high-priority